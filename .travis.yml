os:
  - linux
  - osx
  - windows

jobs:
  include:
    -
      name: "Ubuntu 16.04"
      os: linux
      dist: xenial  # Ubuntu 16.04
      language: python
    -
      name: "Ubuntu 18.04"
      os: linux
      dist: bionic  # Ubuntu 18.04
      language: python
    -
      name: "Ubuntu 20.04"
      os: linux
      dist: focal  # Ubuntu 20.04 
      language: python 
    -
      name: "Monterey"
      os: osx
      osx_image: xcode13.2  # Monterey
      language: shell
    -
      name: "Big Sur"
      os: osx
      osx_image: xcode13.1  # Big Sur
      language: shell
    -
      name: "Catalina"
      os: osx
      osx_image: xcode12.2  # Catalina, last version still supported
      language: shell
    -
      name: "Windows"
      os: windows  # only Windows Server, version 1803
      language: shell
      before_install:
        - choco install python3 3.6.8
        - python -m pip install --upgrade pip
        - pip3 install -U pytest
    - stage: deploy
      deploy:
        provider: pypi
        user: $PYPI_USERNAME
        password: $PYPI_PASSWORD
        on:
          tags: true

git:
  depth: false

python:
  - 3.6
  - 3.7
  - 3.8
  - 3.9  # latest version supported for now

before_install:
  - if [ "$TRAVIS_OS_NAME" != "linux" ]; then pip3 install -U pip; fi
  - if [ "$TRAVIS_OS_NAME" != "linux" ]; then pip3 install -U pytest; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then pip install -U pip; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then pip install -U pytest; fi

# before_install:
#   - pip install -U pip
#   - pip install -U pytest

# # We add python path to enable testing jupyter notebooks
# install:
#   - travis_retry pip install -r requirements.txt
#   - travis_retry pip install -r requirements-test.txt
#   - travis_retry export PYTHONPATH=$PWD

install:
  - if [ "$TRAVIS_OS_NAME" != "linux" ]; then travis_retry pip3 install -r requirements.txt; fi
  - if [ "$TRAVIS_OS_NAME" != "linux" ]; then travis_retry pip3 install -r requirements-test.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_retry pip install -r requirements.txt; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_retry pip install -r requirements-test.txt; fi
  - travis_retry export PYTHONPATH=$PWD

env:
  - MPLBACKEND=Agg

cache: pip

# command to run tests
script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then python3 -m pytest --cov=ark --pycodestyle ark; fi
  - if [ "$TRAVIS_OS_NAME" != "osx" ]; then python -m pytest --cov=ark --pycodestyle ark; fi

after_success:
  - coveralls
